{"version":3,"sources":["components/Navbar.js","components/BottomNavigation.js","components/PostList.jsx","components/AnnouncementsList.js","components/Announcement.js","pages/dashboard.jsx","pages/login.jsx","pages/postDetail.jsx","pages/postForm.jsx","components/AnnouncementDetail.js","components/FilesList.js","components/SearchBar.js","pages/files.jsx","components/FileDetail.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","goBackHistory","window","history","back","className","id","showBackNavButton","IconButton","onClick","showBackButton","pageTitle","axios","delete","then","setUser","to","SimpleBottomNavigation","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","component","Link","label","icon","PostListItem","post","data","pathname","_id","Card","key","src","image","alt","CardContent","title","status","fontSize","getStatusIcon","timestamp","createdDate","Date","now","diff","Math","abs","days","floor","hours","minutes","getPassedHoursFromTimestamp","created_at","Posts","state","posts","getData","get","response","setState","getNewestPosts","this","style","map","Component","useStyles","makeStyles","theme","root","gridList","flexWrap","alignItems","transform","backgroundColor","card","color","textAlgin","titleBar","background","AnnouncementsList","classes","GridList","cols","announcements","announcement","content","toDateString","Announcements","console","log","getNewestAnnouncements","dashboard","componentDidMount","backButton","off","setPageTitle","Container","login","handleChange","target","name","handleSubmit","preventDefault","email","password","push","catch","err","onSubmit","autoComplete","FormControl","TextField","type","variant","required","Button","size","postDetail","handleUpvote","match","params","postId","on","location","Paper","elevation","aria-label","Divider","author","PostForm","htmlFor","AnnouncementDetail","announcementId","href","FilesList","files","file","category","padding","display","input","marginLeft","spacing","flex","iconButton","divider","height","margin","CustomizedSearchbar","InputBase","placeholder","inputProps","Files","getNewestFiles","FileDetail","fileId","property","url","App","user","backNavButton","userObj","backButtonOn","backButtonOff","exact","path","render","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.30886704.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n//import { Avatar } from '@material-ui/core';\nimport IconButton from \"@material-ui/core/IconButton\";\n\n// icons\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\n\nconst Navbar = props => {\n  const logout = () => {\n    axios.delete(\"/api/auth/logout\").then(() => {\n      props.setUser(null);\n    });\n  };\n\n  const goBackHistory = () => {\n    window.history.back();\n  };\n\n  const showBackButton = () => {\n    if (props.showBackNavButton) {\n      return (\n        <IconButton className=\"back-btn\" onClick={goBackHistory}>\n          <ArrowBackIosIcon />\n        </IconButton>\n      );\n    }\n  };\n\n  return (\n    <nav className=\"navbar\" id=\"navbar\">\n      {showBackButton(props.showBackNavButton)}\n      <div className=\"nav-title\">{props.pageTitle}</div>\n      <Link onClick={logout} to=\"/\">\n        Logout\n      </Link>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport CalenderIcon from \"@material-ui/icons/EventNote\";\r\nimport FileIcon from \"@material-ui/icons/FileCopy\";\r\n\r\n// const useStyles = makeStyles({\r\n//   root: {\r\n//     width: 500\r\n//   },\r\n//   stickToBottom: {\r\n//     width: \"100%\",\r\n//     position: \"fixed\",\r\n//     bottom: 0,\r\n//     zIndex: 100\r\n//   }\r\n// });\r\n\r\nexport default function SimpleBottomNavigation() {\r\n  //const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={value}\r\n      className=\"bottom-nav\"\r\n      id=\"bottom-nav\"\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue);\r\n      }}\r\n      showLabels\r\n      //   className={classes.root}\r\n    >\r\n      <BottomNavigationAction\r\n        component={Link}\r\n        to=\"/\"\r\n        label=\"Home\"\r\n        icon={<HomeIcon />}\r\n      />\r\n      <BottomNavigationAction label=\"Posts\" icon={<MailIcon />} />\r\n      <BottomNavigationAction label=\"Calender\" icon={<CalenderIcon />} />\r\n      <BottomNavigationAction\r\n        component={Link}\r\n        label=\"Documents\"\r\n        to=\"/files\"\r\n        icon={<FileIcon />}\r\n      />\r\n    </BottomNavigation>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport { Link } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\n\n// components\n//import PostForm from './PostForm';\nimport { CardContent } from \"@material-ui/core\";\n\n// icons\n//import CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport SyncSharpIcon from \"@material-ui/icons/SyncSharp\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n//import DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\nimport RadioButtonUncheckedOutlinedIcon from \"@material-ui/icons/RadioButtonUncheckedOutlined\";\n\nexport const PostListItem = props => {\n  const post = props.data;\n\n  const getStatusIcon = () => {\n    switch (post.status) {\n      case \"open\":\n        return <RadioButtonUncheckedOutlinedIcon fontSize=\"small\" />;\n      case \"accepted\":\n        return \"accepted\";\n      case \"in progress\":\n        return <SyncSharpIcon fontSize=\"small\" />;\n      case \"done\":\n        return <DoneIcon fontSize=\"small\" />;\n      default:\n        return \"nix\";\n    }\n  };\n\n  const getPassedHoursFromTimestamp = timestamp => {\n    const createdDate = new Date(timestamp);\n    const now = new Date();\n    let diff = Math.abs(now - createdDate) / 1000;\n    const days = Math.floor(diff / 86400);\n    diff -= days * 86400;\n    const hours = Math.floor(diff / 3600);\n    diff -= hours * 3600;\n    const minutes = Math.floor(diff / 60);\n    diff -= minutes * 60;\n\n    if (days > 1) {\n      return `${days}d`;\n    } else if (hours > 1) {\n      return `${hours}h`;\n    } else {\n      return `${minutes}m`;\n    }\n  };\n\n  return (\n    <Link to={{ pathname: `/posts/${post._id}`, data: post }}>\n      <Card key={post._id}>\n        <img src={post.image} alt=\"ticket\" />\n        <div className=\"bg-overlay\" />\n        <CardContent>\n          <div className=\"post-title\">{post.title}</div>\n          <div className=\"post-status\">\n            <div className=\"post-status-icon\"> {getStatusIcon()}</div>\n            <div className=\"post-status-time\">\n              {getPassedHoursFromTimestamp(post.created_at)}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </Link>\n  );\n\n  /*   _id: '5e57c8d606d52e930cfd8e2e';\n  image: 'https://images.unsplash.com/photo-1576096876569-0cffb1b1268d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60';\n  dueDate: null;\n  content: \"There's again a new graffitti on the wall\";\n  title: 'graffitti on front wall';\n  status: 'open';\n  archived: false;\n  private: false;\n  voteCount: 0;\n  created_at: '2020-02-27T13:49:10.775Z';\n  updated_at: '2020-02-27T13:49:10.775Z';\n  __v: 0; */\n};\n\nexport default class Posts extends Component {\n  state = {\n    posts: []\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData = () => {\n    // console.log(\"getData()\");\n    axios.get(\"/api/posts\").then(response => {\n      this.setState({\n        posts: response.data\n      });\n    });\n  };\n\n  getNewestPosts = () => {\n    axios.get(\"/api/posts?sortBy=created_at\").then(response => {\n      this.setState({\n        posts: response.data\n      });\n    });\n  };\n\n  render() {\n    const posts = this.state.posts;\n    return (\n      <div className=\"posts-wrapper\">\n        <p>Messages</p>\n        <Link to=\"/posts/new\">\n          <Card id=\"new-post\">\n            <CardContent>\n              <AddCircleIcon style={{ fontSize: \"5rem\" }} />\n            </CardContent>\n          </Card>\n        </Link>\n\n        {posts.map(post => {\n          return <PostListItem key={post._id} data={post} />;\n        })}\n      </div>\n    );\n  }\n}\n","// import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { CardContent } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    // display: \"flex\",\r\n    // flexWrap: \"wrap\",\r\n    // overflow: \"hidden\"\r\n  },\r\n  gridList: {\r\n    flexWrap: \"nowrap\",\r\n    alignItems: \"left\",\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: \"translateZ(0)\"\r\n  },\r\n  title: {\r\n    backgroundColor: \"white\"\r\n  },\r\n  card: {\r\n    backgroundColor: \"#335CFF\",\r\n    color: \"#f7f7f7\",\r\n    textAlgin: \"left\"\r\n  },\r\n  titleBar: {\r\n    background:\r\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\r\n  }\r\n}));\r\n\r\nexport default function AnnouncementsList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList className={classes.gridList} cols={0.5}>\r\n        {props.announcements.map(announcement => (\r\n          <Link key={announcement._id} to={`/announcement/${announcement._id}`}>\r\n            <Card>\r\n              <CardContent className={classes.card}>\r\n                <div className=\"announcement-title\">{announcement.title}</div>\r\n                <div className=\"announcement-content\">\r\n                  {announcement.content}\r\n                </div>\r\n                <div className=\"post-status\">\r\n                  {/* <div className='post-status-icon'> {getStatusIcon()}</div> */}\r\n                  <div className=\"announcement-status-time\">\r\n                    {new Date(announcement.created_at).toDateString()}\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </Link>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport AnnouncementsList from \"./AnnouncementsList\";\r\n\r\nexport default class Announcements extends Component {\r\n  state = {\r\n    announcements: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getData = () => {\r\n    console.log(\"getData()\");\r\n    axios.get(\"/api/announcements\").then(response => {\r\n      this.setState({\r\n        announcements: response.data\r\n      });\r\n    });\r\n  };\r\n\r\n  getNewestAnnouncements = () => {\r\n    axios.get(\"/api/announcements?sortBy=created_at\").then(response => {\r\n      this.setState({\r\n        announcements: response.data\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log(\"<Announcements/> RENDER\");\r\n    return (\r\n      <div>\r\n        <AnnouncementsList announcements={this.state.announcements} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\n\n// Components\nimport PostList from \"../components/PostList.jsx\";\nimport Announcement from \"../components/Announcement\";\nimport { Container } from \"@material-ui/core\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\n\nexport default class dashboard extends Component {\n  componentDidMount = () => {\n    console.log(this.props);\n    this.props.backButton.off();\n    this.props.setPageTitle(\"House Log\");\n  };\n  render() {\n    return (\n      <Container>\n        <div className=\"dashboardHeader\">\n          <p>\n            {\" \"}\n            <LocationOnIcon />\n            Lobeckstraße 36-40, 10969 Berlin\n          </p>\n        </div>\n\n        <Announcement />\n        <PostList {...this.props} />\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  FormControl,\n  TextField,\n  Container\n  //Input,\n  //InputLabel,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\n\nexport default class login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"submit: \");\n    console.log(this.state);\n\n    axios\n      .post(\"/api/auth/login\", {\n        email: this.state.email,\n        password: this.state.password\n      })\n      .then(response => {\n        console.log(response);\n\n        this.props.setUser(response.data);\n        this.props.history.push(\"/\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <Container className=\"login\">\n        <div className=\"loginHeader\">\n          <h3>Welcome to h.express</h3>\n        </div>\n        <form onSubmit={this.handleSubmit} autoComplete=\"on\">\n          <FormControl>\n            <div className=\"loginEmail\">\n              <TextField\n                name=\"email\"\n                id=\"email\"\n                type=\"email\"\n                label=\"E-Mail\"\n                variant=\"filled\"\n                onChange={this.handleChange}\n                required\n                autoComplete=\"current-email\"\n              />\n            </div>\n          </FormControl>\n          <FormControl>\n            <div className=\"loginPassword\">\n              <TextField\n                name=\"password\"\n                id=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                variant=\"filled\"\n                onChange={this.handleChange}\n                required\n                autoComplete=\"current-password\"\n              />\n            </div>\n          </FormControl>\n          <div className=\"loginButton\">\n            <Button size=\"large\" color=\"inherit\" type=\"submit\">\n              Login\n            </Button>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container, Paper, IconButton, Divider } from \"@material-ui/core\";\n\n// icons\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport axios from \"axios\";\n\nexport default class postDetail extends Component {\n  state = {\n    post: null\n  };\n\n  componentDidMount() {\n    const id = this.props.match.params.postId;\n    console.log(\"Mount\", this.props);\n    this.props.backButton.on();\n\n    if (!!this.props.location.data) {\n      this.setState({\n        post: this.props.location.data\n      });\n    } else {\n      axios.get(`/api/posts/${id}`).then(response => {\n        this.setState({\n          post: response.data\n        });\n      });\n    }\n  }\n\n  handleUpvote = () => {\n    const id = this.props.match.params.postId;\n    axios.post(`/api/posts/${id}/upvote`).then(response => {\n      this.setState({ post: response.data });\n    });\n  };\n  render() {\n    console.log(\"render\");\n\n    if (!this.state.post) {\n      return \"loading\";\n    }\n    const post = this.state.post;\n    console.log(post);\n    return (\n      <Container className=\"post-detail\">\n        <Paper elevation={1} variant=\"outlined\">\n          <img src={post?.image} alt=\"postname\" />\n        </Paper>\n        <div className=\"post-detail-action-icons\">\n          <IconButton aria-label=\"delete\">\n            <DeleteOutlineIcon fontSize=\"large\" />\n          </IconButton>\n          <IconButton aria-label=\"delete\">\n            <EditIcon fontSize=\"large\" />\n          </IconButton>\n        </div>\n        <Divider />\n        <div className=\"post-detail-title \">{post.title}</div>\n        <div className=\"post-detail-content\">{post.content}</div>\n        <div className=\"post-detail-author\">{post.author}</div>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Container, Paper } from \"@material-ui/core\";\nimport CropFreeIcon from \"@material-ui/icons/CropFree\";\n\nexport default class PostForm extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n  componentDidMount() {\n    this.props.backButton.on();\n    this.props.setPageTitle(\"New Message\");\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    console.log(\"Form submitted\");\n\n    axios\n      .post(\"/api/posts\", {\n        title: this.state.title,\n\n        content: this.state.content\n      })\n      .then(() => {\n        console.log(\"Response received, calling getData in <Posts/>\");\n\n        this.setState({\n          title: \"\",\n          content: \"\",\n          type: \"text\"\n        });\n      });\n  };\n\n  render() {\n    return (\n      <Container className=\"post-new\">\n        <form className=\"create-post\" onSubmit={this.handleSubmit}>\n          <Paper elevation={1} variant=\"outlined\">\n            <CropFreeIcon />\n          </Paper>\n          <label htmlFor=\"title\">Title</label>\n          <input\n            id=\"title\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.handleChange}\n          />\n          <p> </p>\n          <label htmlFor=\"content\">Content</label>\n          <input\n            id=\"content\"\n            name=\"content\"\n            value={this.state.content}\n            onChange={this.handleChange}\n          />\n          <p> </p>\n\n          <button>Create new Post</button>\n        </form>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default class AnnouncementDetail extends Component {\r\n  state = {\r\n    announcement: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match.params.announcementId;\r\n\r\n    axios.get(`/api/announcements/${id}`).then(response => {\r\n      this.setState({\r\n        announcement: response.data\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const announcement = this.state.announcement;\r\n\r\n    console.log(\"Announcement DETAIL \", this.state.announcement);\r\n\r\n    if (!announcement) {\r\n      return <div>Loading</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>\r\n          {announcement.type} {announcement.title}\r\n        </h2>\r\n        {announcement.type === \"link\" ? (\r\n          <a href={announcement.content}>{announcement.content}</a>\r\n        ) : (\r\n          <p>{announcement.content}</p>\r\n        )}\r\n        <p>\r\n          announcemented on {new Date(announcement.created_at).toDateString()}\r\n        </p>\r\n        <img\r\n          className=\"announcementImage\"\r\n          src={announcement.image}\r\n          alt={announcement.title}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import Card from \"@material-ui/core/Card\";\n// import { CardContent } from \"@material-ui/core\";\n\nconst FilesList = props => {\n  console.log(props.files);\n  return props.files.map(file => { \n    return (\n      <Link key={file._id} to={`/files/${file._id}`}>\n        <div className=\"fileCards\" key={file._id}>\n          <div className=\"fileCardsTitle\">\n            <p>{new Date(file.created_at).toDateString()}</p>\n          </div>\n          <div className=\"fileCardsTitle\">\n            <h4>{file.title} </h4>\n          </div>\n          <div className=\"fileCardsCategory\">\n            <p>{file.category}</p>\n          </div>\n        </div>\n      </Link>\n    );\n  });\n};\n\nexport default FilesList;\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n//import Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n//import MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1\r\n  },\r\n  iconButton: {\r\n    padding: 10\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4\r\n  }\r\n}));\r\n\r\nexport default function CustomizedSearchbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper component=\"form\" className={classes.root}>\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"Search all documents\"\r\n        inputProps={{ \"aria-label\": \"search all files\" }}\r\n      />\r\n      <IconButton\r\n        type=\"submit\"\r\n        className={classes.iconButton}\r\n        aria-label=\"search\"\r\n      >\r\n        <SearchIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport FilesList from \"../components/FilesList\";\nimport { Container } from \"@material-ui/core\";\nimport CustomizedSearchbar from \"../components/SearchBar.js\";\n\nexport default class Files extends Component {\n  state = {\n    files: []\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData = () => {\n    console.log(\"getData()\");\n    axios.get(\"/api/files\").then(response => {\n      this.setState({\n        files: response.data\n      });\n    });\n  };\n\n  getNewestFiles = () => {\n    axios.get(\"/api/files?sortBy=created_at\").then(response => {\n      this.setState({\n        files: response.data\n      });\n    });\n  };\n\n  render() {\n    console.log(\"< Files/> RENDER\");\n    return (\n      <Container>\n        <CustomizedSearchbar className=\"CustomizedSearchbar\" />\n        <FilesList files={this.state.files} />\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nclass FileDetail extends Component {\r\n  state = {\r\n    file: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match.params.fileId;\r\n\r\n    axios.get(`/api/files/${id}`).then(response => {\r\n      this.setState({\r\n        file: response.data\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const file = this.state.file;\r\n    if (!file) {\r\n      return <div>Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Card className=\"fileCardsDetail\">\r\n          <CardContent>\r\n            <div>\r\n              <div>\r\n                <h2>{file.title}</h2>\r\n                <p>{file.property}</p>\r\n                <p>created on {new Date(file.created_at).toDateString()}</p>\r\n                <p> created on {new Date(file.created_at).toDateString()}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"fileCardsDetail\">\r\n          <CardContent>\r\n            <div>\r\n              <div>\r\n                <img src={file.url} alt={file.title} />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileDetail;\r\n","// Final Project\n//\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport \"./App.scss\";\n\n// Navbar\nimport Navbar from \"./components/Navbar.js\";\n\nimport LabelBottomNavigation from \"./components/BottomNavigation.js\";\n\n// Pages\nimport Dashboard from \"./pages/dashboard\";\nimport LoginPage from \"./pages/login\";\n\n// Posts\nimport PostDetail from \"./pages/postDetail.jsx\";\nimport PostForm from \"./pages/postForm.jsx\";\n\n// Announcements\nimport AnnouncementDetail from \"./components/AnnouncementDetail.js\";\n// import AnDetail from './components/AnnouncementDetail.js';\n\n//Files\nimport File from \"./pages/files.jsx\";\nimport FileDetail from \"./components/FileDetail.js\";\n//import { BottomNavigation } from \"@material-ui/core\";\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user,\n    pageTitle: \"\",\n    backNavButton: false\n  };\n\n  setUser = userObj => {\n    this.setState({\n      user: userObj\n    });\n  };\n\n  backButtonOn = () => {\n    console.log(\"backbutton on\");\n    this.setState({\n      backNavButton: true\n    });\n  };\n\n  backButtonOff = () => {\n    console.log(\"backbutton off\");\n    this.setState({\n      backNavButton: false\n    });\n  };\n\n  setPageTitle = title => {\n    this.setState({\n      pageTitle: title\n    });\n  };\n\n  // componentDidMount = () => {\n  //   this.setPageTitle(\"House Log\");\n  // };\n\n  render() {\n    // if you are logged out, you are automatically redirected to the LoginPage!\n\n    if (!!!this.state.user) {\n      return (\n        <div className=\"App\">\n          <LoginPage history={this.props.history} setUser={this.setUser} />\n        </div>\n      );\n    }\n\n    const showBackButton = {\n      on: this.backButtonOn,\n      off: this.backButtonOff\n    };\n\n    return (\n      <div className=\"App\">\n        <Navbar\n          setUser={this.setUser}\n          showBackNavButton={this.state.backNavButton}\n          pageTitle={this.state.pageTitle}\n          user={this.state.user}\n        />\n        {/* <div className=\"site-content\" id=\"site-content\"> */}\n        {/* Announcement: List all Announcements */}\n        <Route\n          exact\n          path=\"/\"\n          render={props => (\n            <Dashboard\n              {...props}\n              backButton={showBackButton}\n              setPageTitle={this.setPageTitle}\n            />\n          )}\n        />\n\n        {/* Announcement: View one Announcement */}\n        <Route\n          exact\n          path=\"/announcements/:announcementId\"\n          render={props => <AnnouncementDetail {...props} />}\n        />\n\n        {/* Post: Create form */}\n        <Route\n          exact\n          path=\"/posts/new\"\n          render={props => (\n            <PostForm\n              {...props}\n              backButton={showBackButton}\n              setPageTitle={this.setPageTitle}\n            />\n          )}\n        ></Route>\n\n        {/* Post: View one post */}\n        <Route\n          exact\n          path=\"/posts/:postId\"\n          render={props => (\n            <PostDetail {...props} backButton={showBackButton} />\n          )}\n        />\n        {/* files */}\n        <Route\n          exact\n          path=\"/files\"\n          render={props => {\n            return <File {...props} />;\n          }}\n        />\n\n        <Route\n          exact\n          path=\"/files/:fileId\"\n          render={props => <FileDetail {...props} />}\n        />\n        {/* </div> */}\n        <LabelBottomNavigation className=\"bottom-nav\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.get(\"/api/auth/loggedin\").then(response => {\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={response.data} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}